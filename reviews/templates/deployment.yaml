{{ $elem := index .Values.deployments 2 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ $elem.name }}
  labels:
    # app:  {{ $.Values.name }}
    app:  {{ $elem.name }}
    service:  {{ $elem.image.tag }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      # app:  {{ $.Values.name }}
      app:  {{ $elem.name }}
      version: {{ $elem.image.tag }}
  template:
    metadata:
      labels:
        app:  {{ $elem.name }}
        # app:  {{ $.Values.name }}
        version: {{ $elem.image.tag }}
    spec:
      containers:
      - name: {{ $elem.name }}
        image: "{{ $elem.image.repository }}:{{ $elem.image.tag | default "v1" }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $.Values.service.port}}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}

{{ $elem := index .Values.deployments 1 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ $elem.name }}
  labels:
    # app:  {{ $.Values.name }}
    app:  {{ $elem.name }}
    service:  {{ $elem.image.tag }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      # app:  {{ $.Values.name }}
      app:  {{ $elem.name }}
      version: {{ $elem.image.tag }}
  template:
    metadata:
      labels:
        app:  {{ $elem.name }}
        # app:  {{ $.Values.name }}
        version: {{ $elem.image.tag }}
    spec:
      containers:
      - name: {{ $elem.name }}
        image: "{{ $elem.image.repository }}:{{ $elem.image.tag | default "v1" }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $.Values.service.port}}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}

{{ $elem := index .Values.deployments 0 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ $elem.name }}
  labels:
    # app:  {{ $.Values.name }}
    app:  {{ $elem.name }}
    service:  {{ $elem.image.tag }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      # app:  {{ $.Values.name }}
      app:  {{ $elem.name }}
      version: {{ $elem.image.tag }}
  template:
    metadata:
      labels:
        app:  {{ $elem.name }}
        # app:  {{ $.Values.name }}
        version: {{ $elem.image.tag }}
    spec:
      containers:
      - name: {{ $elem.name }}
        image: "{{ $elem.image.repository }}:{{ $elem.image.tag | default "v1" }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $.Values.service.port}}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}

